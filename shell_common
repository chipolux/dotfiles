#!/bin/sh
PARTS=("/usr/local/bin"
       "/usr/local/sbin"
       "/opt/local/bin"
       "/opt/local/sbin"
       "$HOME/.local/bin")

for PART in "${PARTS[@]}"; do
    if [[ -e $PART && ":$PATH:" != *":$PART:"* ]]; then
        export PATH="$PART:$PATH"
    fi
done

# Set Postgres stuff
if [ -d "/usr/local/var/postgres" ]; then
    export PGDATA="/usr/local/var/postgres"
fi

# Set mysql stuff
if [ -d "/usr/local/Cellar/mysql@5.7/5.7.25/lib" ]; then
    export DYLD_LIBRARY_PATH="/usr/local/Cellar/mysql@5.7/5.7.25/lib:$DYLD_LIBRARY_PATH"
fi

# pyenv
if [ -f "$(which pyenv)" ]; then
    eval "$(pyenv init -)"
fi
if [ -f "$(which pyenv-virtualenv-init)" ]; then
    eval "$(pyenv virtualenv-init -)"
fi

# virtualenvwrapper
if [ -z "$PYENV_SHELL" ]; then
    venvwrapper=$(which virtualenvwrapper.sh)
    if [ -f ~/.local/bin/virtualenvwrapper.sh ]; then
        venvwrapper=~/.local/bin/virtualenvwrapper.sh
    fi

    if [ $venvwrapper ] && [ -s $venvwrapper ] && [ -z $VIRTUAL_ENV ]; then
        export WORKON_HOME=$HOME/.virtualenvs
        export PIP_VIRTUALENV_BASE=$WORKON_HOME
        export VIRTUALENVWRAPPER_PYTHON=$(which python3)
        source $venvwrapper
    fi
fi

# Ack-grep to ack
if [ -s "$(which ack-grep)" ]; then
    alias ack='ack-grep'
fi

# useful aliases
alias lt='ls -lth'
alias rsync='rsync -h --progress --partial'
alias gvir='gvim --remote'

# mutt aliases
alias mail-personal='mutt -F ~/.mutt/personal.muttrc'
alias mail-summit='mutt -F ~/.mutt/summit.muttrc'

# always try to use imagemagick with feh
alias feh='feh --magick-timeout 1 --geometry 500x500'

# TODO: need to make this work on linux.
function pman() {
    man -t "$@" | open -f -a Preview
}

# setup custom dir mapping tool
function map() {
    tree -a -J $1 | $HOME/.dotfiles/map.py | dot -Tpdf
}

# function to open vim with fuzzy found file
# alias vf='vim $(fzf --height 30)'
function vf() {
    f=$(fzf --height 15 --query=$1)
    if [ $f ] && [ -f $f ]; then
        vim $f
    fi
}

# function to countdown the provided seconds
# ex: `countdown $((5*60))` to countdown for 5 minutes
function countdown() {
    t=$((`date +%s` + $1))
    while [ "$t" -gt `date +%s` ]; do
        echo -en "\r\033[K$(($t - `date +%s`))"
        sleep 0.1
    done
    if [ "$(uname)" = "Darwin" ]; then
        say -v Fred "Your $(printf "%'.0f" $1) second timer is done!"
    fi
    echo -e "\nDONE"
}

# Don't close terminal on Ctrl+D
export IGNOREEOF=2

# Coloring on some systems for ls
# http://osxdaily.com/2012/02/21/add-color-to-the-terminal-in-mac-os-x/
export CLICOLOR=1
export LSCOLORS=GxfxcxdxbxAgAdabagacad

if [ $TERM = "screen" ]; then
    export TERM=screen-256color
fi

# Make less not clear screen on exit (-X), exit if content fits (-F), and use
# colors (-R)
export LESS="-XFR"

# Don't seem to need this anymore.
# if [ $TERM = "xterm-kitty" ]; then
#     alias ssh="kitty +kitten ssh"
# fi

export EDITOR=vim

# If there is stuff like API tokens, keys, etc that need to be put in the
# environment, put them in ~/.private_profile and this will source them in
if [ -s "$HOME/.private_profile" ]; then
    source "$HOME/.private_profile"
fi
